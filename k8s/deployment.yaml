# =============================================================================
# Kubernetes Deployment for MCP Service
# =============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-service
  namespace: data-discovery
  labels:
    app: data-discovery-agent
    component: mcp-service
    version: "1.0.0"
spec:
  replicas: 2  # For high availability
  
  selector:
    matchLabels:
      app: data-discovery-agent
      component: mcp-service
  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  template:
    metadata:
      labels:
        app: data-discovery-agent
        component: mcp-service
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    
    spec:
      # Use Workload Identity service account
      serviceAccountName: mcp-service-sa
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      containers:
      - name: mcp-service
        # Replace with your container registry
        image: gcr.io/PROJECT_ID/data-discovery-agent-mcp:latest
        imagePullPolicy: Always
        
        # Container ports
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # Environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: mcp-service-config
        
        # Environment variables from Secret
        env:
        - name: GCP_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: mcp-service-secrets
              key: GCP_PROJECT_ID
        
        - name: GCS_JSONL_BUCKET
          valueFrom:
            secretKeyRef:
              name: mcp-service-secrets
              key: GCS_JSONL_BUCKET
        
        - name: GCS_REPORTS_BUCKET
          valueFrom:
            secretKeyRef:
              name: mcp-service-secrets
              key: GCS_REPORTS_BUCKET
        
        # Resource limits and requests
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        
        # Liveness probe (HTTP endpoint)
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Readiness probe (HTTP endpoint)
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Security context for container
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
      # Node affinity (optional - prefer preemptible nodes for cost savings)
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: data-discovery-agent
                  component: mcp-service
              topologyKey: kubernetes.io/hostname
      
      # Tolerations (optional - for node pools)
      # tolerations:
      # - key: "workload"
      #   operator: "Equal"
      #   value: "data-discovery"
      #   effect: "NoSchedule"

---
# =============================================================================
# Horizontal Pod Autoscaler (HPA)
# =============================================================================
# Automatically scales pods based on CPU/memory usage

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-service-hpa
  namespace: data-discovery
  labels:
    app: data-discovery-agent
    component: mcp-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-service
  
  minReplicas: 2
  maxReplicas: 10
  
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30

