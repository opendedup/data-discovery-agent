# =============================================================================
# Secret Template for MCP Service
# =============================================================================
# IMPORTANT: This is a TEMPLATE. Do NOT commit actual secrets to git!
# 
# For production, use one of these approaches:
# 1. Google Secret Manager with Workload Identity
# 2. kubectl create secret from file
# 3. Sealed Secrets or External Secrets Operator
# =============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: mcp-service-secrets
  namespace: data-discovery
  labels:
    app: data-discovery-agent
    component: mcp-service
type: Opaque
stringData:
  # Google Cloud Project ID
  # Replace with your actual project ID
  GCP_PROJECT_ID: "your-project-id"
  
  # GCS Buckets
  # Replace with your actual bucket names
  GCS_JSONL_BUCKET: "your-jsonl-bucket"
  GCS_REPORTS_BUCKET: "your-reports-bucket"
  
  # API Keys (if needed - prefer Workload Identity)
  # GOOGLE_API_KEY: "your-api-key"
  # GEMINI_API_KEY: "your-gemini-api-key"

---
# =============================================================================
# Usage Instructions:
# =============================================================================
#
# Option 1: Use Google Secret Manager (RECOMMENDED)
# --------------------------------------------------
# 1. Store secrets in Secret Manager
# 2. Grant service account access
# 3. Use External Secrets Operator to sync to K8s
#
# Option 2: Create Secret from Command Line
# --------------------------------------------------
# kubectl create secret generic mcp-service-secrets \
#   --from-literal=GCP_PROJECT_ID=your-project-id \
#   --from-literal=GCS_JSONL_BUCKET=your-jsonl-bucket \
#   --from-literal=GCS_REPORTS_BUCKET=your-reports-bucket \
#   --namespace=data-discovery
#
# Option 3: Use this file (NOT RECOMMENDED for production)
# ----------------------------------------------------------
# 1. Copy this file to secret-prod.yaml (add to .gitignore)
# 2. Replace placeholder values
# 3. kubectl apply -f k8s/secret-prod.yaml
#
# =============================================================================

