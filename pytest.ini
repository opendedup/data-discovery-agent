[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio mode
asyncio_mode = auto

# Test output
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov-report=term-missing
    --cov-report=html:htmlcov

# Markers for test categorization
markers =
    unit: Unit tests with mocked dependencies (fast)
    integration: Integration tests using real GCP resources (slow)
    slow: Slow-running tests
    collectors: Tests for data collectors
    formatters: Tests for formatters and search components
    writers: Tests for writers
    mcp: Tests for MCP service
    orchestration: Tests for orchestration tasks
    lineage: Tests for lineage tracking
    search: Tests for search functionality

# Coverage settings
[coverage:run]
source = src/data_discovery_agent
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

